From 50da97afb297cb87b6f8ecf34ff3455e4615dfde Mon Sep 17 00:00:00 2001
From: Arun Prakash Jana <engineerarun@gmail.com>
Date: Wed, 9 Sep 2015 09:42:00 +0530
Subject: [a02f63f544ea] [PATCH 2/2] Task 08: add foo file

Signed-off-by: Arun Prakash Jana <engineerarun@gmail.com>
---
 Task_08/dbgmod.c  | 81 ++++++++++++++++++++++++++++++++++++++++++++++++-------
 Task_08/proof.txt | 20 +++++++++++++-
 2 files changed, 90 insertions(+), 11 deletions(-)

diff --git a/Task_08/dbgmod.c b/Task_08/dbgmod.c
index 8297b16..cb10c67 100644
--- a/Task_08/dbgmod.c
+++ b/Task_08/dbgmod.c
@@ -9,23 +9,41 @@ MODULE_LICENSE("GPL");
 
 static const char id[] = "a02f63f544ea";
 static struct dentry *subdir;
+static int foo_len = 0;
+static char foo_data[PAGE_SIZE];
+static struct mutex foo_mutex;
 
-static ssize_t dbg_read(struct file *filp,
+static ssize_t id_read(struct file *filp,
 		char *buffer,
 		size_t len,
 		loff_t *offset);
-static ssize_t dbg_write(struct file *filp,
+static ssize_t id_write(struct file *filp,
 		const char *buffer,
 		size_t len,
 		loff_t *offset);
 
-const struct file_operations dbg_fops = {
+static ssize_t foo_read(struct file *filp,
+		char *buffer,
+		size_t len,
+		loff_t *offset);
+static ssize_t foo_write(struct file *filp,
+		const char *buffer,
+		size_t len,
+		loff_t *offset);
+
+const struct file_operations id_fops = {
+	.owner = THIS_MODULE,
+	.read = id_read,
+	.write = id_write
+};
+
+const struct file_operations foo_fops = {
 	.owner = THIS_MODULE,
-	.read = dbg_read,
-	.write = dbg_write
+	.read = foo_read,
+	.write = foo_write
 };
 
-static ssize_t dbg_read(struct file *filp,
+static ssize_t id_read(struct file *filp,
 		char *buffer,
 		size_t len,
 		loff_t *offset)
@@ -33,7 +51,7 @@ static ssize_t dbg_read(struct file *filp,
 	return simple_read_from_buffer(buffer, len, offset, id, sizeof(id));
 }
 
-static ssize_t dbg_write(struct file *filp,
+static ssize_t id_write(struct file *filp,
 		const char *buffer,
 		size_t len,
 		loff_t *offset)
@@ -58,10 +76,46 @@ static ssize_t dbg_write(struct file *filp,
 	return len;
 }
 
+static ssize_t foo_read(struct file *filp,
+		char *buffer,
+		size_t len,
+		loff_t *offset)
+{
+	int ret = mutex_lock_interruptible(&foo_mutex);
+	if (ret)
+		return ret;
+
+	ret = simple_read_from_buffer(buffer, len, offset, foo_data, foo_len);
+
+	mutex_unlock(&foo_mutex);
+	return ret;
+}
+
+static ssize_t foo_write(struct file *filp,
+		const char *buffer,
+		size_t len,
+		loff_t *offset)
+{
+	ssize_t ret = mutex_lock_interruptible(&foo_mutex);
+	if (ret)
+		return ret;
+
+	len = len > PAGE_SIZE ? PAGE_SIZE : len;
+
+	if ((ret = simple_write_to_buffer(foo_data,
+				PAGE_SIZE, offset, buffer, len)) < 0) {
+		return ret;
+	}
+
+	foo_len = ret;
+
+	mutex_unlock(&foo_mutex);
+	return ret;
+}
+
 static int __init dbg_init(void)
 {
-	struct dentry *file;
-	struct dentry *file1;
+	struct dentry *file, *file1, *file2;
 
 	subdir = debugfs_create_dir("eudyptula", NULL);
 	if (IS_ERR(subdir))
@@ -69,7 +123,7 @@ static int __init dbg_init(void)
 	if (!subdir)
 		return -ENOENT;
 
-	file = debugfs_create_file("id", 0666, subdir, NULL, &dbg_fops);
+	file = debugfs_create_file("id", 0666, subdir, NULL, &id_fops);
 	if (!file) {
 		debugfs_remove_recursive(subdir);
 		return -ENOENT;
@@ -81,6 +135,13 @@ static int __init dbg_init(void)
 		return -ENOENT;
 	}
 
+	mutex_init(&foo_mutex);
+	file2 = debugfs_create_file("foo", 0644, subdir, NULL, &foo_fops);
+	if (!file2) {
+		debugfs_remove_recursive(subdir);
+		return -ENOENT;
+	}
+
 	return 0;
 }
 
diff --git a/Task_08/proof.txt b/Task_08/proof.txt
index a1fd57e..3d1d2b3 100644
--- a/Task_08/proof.txt
+++ b/Task_08/proof.txt
@@ -7,5 +7,23 @@
 tee: /sys/kernel/debug/eudyptula/id: Invalid argument
 ~/D/e/Task_08 $ echo a02f63f544ea | tee /sys/kernel/debug/eudyptula/id
 a02f63f544ea
+~/D/e/Task_08 $ cat /sys/kernel/debug/eudyptula/jiffies
+4299043478
+~/D/e/Task_08 $ cat /sys/kernel/debug/eudyptula/jiffies
+4299062490
+~/D/e/Task_08 $ echo 1234 | tee /sys/kernel/debug/eudyptula/jiffies
+tee: /sys/kernel/debug/eudyptula/jiffies: Permission denied
+1234
+~/D/e/Task_08 $ cat /sys/kernel/debug/eudyptula/foo
+~/D/e/Task_08 $ echo 123456|tee /sys/kernel/debug/eudyptula/foo
+tee: /sys/kernel/debug/eudyptula/foo: Permission denied
+123456
+~/D/e/Task_08 $ echo 1234|sudo tee /sys/kernel/debug/eudyptula/foo
+1234
+~/D/e/Task_08 $ cat /sys/kernel/debug/eudyptula/foo 
+1234
+~/D/e/Task_08 $ echo 12345|sudo tee /sys/kernel/debug/eudyptula/foo
+12345
+~/D/e/Task_08 $ cat /sys/kernel/debug/eudyptula/foo sudo 
+12345
 ~/D/e/Task_08 $ sudo rmmod dbgmod
-~/D/e/Task_08 $
-- 
1.9.1

